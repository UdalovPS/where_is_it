"""init

Revision ID: 69aabcf8d6ab
Revises: 
Create Date: 2025-06-06 06:54:59.717223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_file


# revision identifiers, used by Alembic.
revision: str = '69aabcf8d6ab'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=18), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('login', sa.String(length=20), nullable=False),
    sa.Column('password', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=False),
    sa.Column('verify', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('login')
    )
    op.create_table('organizations_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('detail', sa.String(), nullable=False),
    sa.Column('access_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countries_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('frontend_services_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clients_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('frontend_service_id', sa.Integer(), nullable=False),
    sa.Column('frontend_id', sa.BigInteger(), nullable=True),
    sa.Column('frontend_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['frontend_service_id'], ['frontend_services_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('districts_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sub_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cities_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['district_id'], ['districts_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branches_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_token_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('branch_schemas_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlalchemy_file.types.FileField(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('client_location_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['client_id'], ['clients_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shelves_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('x1', sa.Integer(), nullable=False),
    sa.Column('y1', sa.Integer(), nullable=False),
    sa.Column('x2', sa.Integer(), nullable=False),
    sa.Column('y2', sa.Integer(), nullable=False),
    sa.Column('cell_count', sa.Integer(), nullable=False),
    sa.Column('floor_count', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spots_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shelf_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('cell_number', sa.Integer(), nullable=False),
    sa.Column('floor_number', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['item_id'], ['items_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shelf_id'], ['shelves_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updator_id'], ['users_table.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spots_table')
    op.drop_table('shelves_table')
    op.drop_table('client_location_table')
    op.drop_table('branch_schemas_table')
    op.drop_table('auth_token_table')
    op.drop_table('branches_table')
    op.drop_table('cities_table')
    op.drop_table('items_table')
    op.drop_table('districts_table')
    op.drop_table('clients_table')
    op.drop_table('frontend_services_table')
    op.drop_table('countries_table')
    op.drop_table('categories_table')
    op.drop_table('organizations_table')
    op.drop_table('users_table')
    # ### end Alembic commands ###
